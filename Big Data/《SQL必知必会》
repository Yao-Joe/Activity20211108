数据类型及其名称是SQL不兼容的一个主要原因。
办法就是使用DISTINCT关键字，顾名思义，它指示数据库只返回不同的值。
MySQL、MariaDB和SQLite可以把LIMIT 4 OFFSET 3语句简化为LIMIT 3,4。使用这个语法，逗号之前的值对应OFFSET，逗号之后的值对应LIMIT（反着的，要小心）。
注释的另一个重要应用是暂停要执行的SQL代码。如果你碰到一个长SQL语句，而只想测试它的一部分，那么应该注释掉一些代码，以便DBMS略去这些注释。
注释使用--（两个连字符）嵌在行内。——之后的文本就是注释
关系数据库设计理论认为，如果不明确规定排序顺序，则不应该假定检索出的数据的顺序有任何意义。
ORDER BY子句取一个或多个列的名字，据此对输出进行排序。
在指定一条ORDER BY子句时，应该保证它是SELECT语句中最后一条子句。如果它不是最后的子句，将会出错。
要按多个列排序，只须指定这些列名，列名之间用逗号分开即可（就像选择多个列时那样）。
ORDER BY还支持按相对列位置进行排序。
ORDER BY 2表示按SELECT清单中的第二个列prod_price进行排序。ORDER BY 2, 3表示先按prod_price，再按prod_name进行排序。
ORDER BY子句进行降序（从Z到A）排序。为了进行降序排序，必须指定DESC关键字。
DESC关键字只应用到直接位于其前面的列名。
提示：区分大小写和排序顺序
在字典（dictionary）排序顺序中，A被视为与a相同，这是大多数数据库管理系统的默认做法。但是，许多DBMS允许数据库管理员在需要时改变这种行为（如果你的数据库包含大量外语字符，可能必须这样做）。这里的关键问题是，如果确实需要改变这种排序顺序，用简单的ORDER BY子句可能做不到。你必须请求数据库管理员的帮助。
只检索所需数据需要指定搜索条件（search criteria），搜索条件也称为过滤条件（filter condition）。
优化数据库后可以更快速有效地对数据进行过滤。而让客户端应用（或开发语言）处理数据库的工作将会极大地影响应用的性能，并且使所创建的应用完全不具备可伸缩性。此外，如果在客户端过滤数据，服务器不得不通过网络发送多余的数据，这将导致网络带宽的浪费。
提示：何时使用引号如果仔细观察上述WHERE子句中的条件，会看到有的值括在单引号内，而有的值未括起来。单引号用来限定字符串。如果将值与字符串类型的列进行比较，就需要限定引号。用来与数值列进行比较的值不用引号。
这两个值必须用AND关键字分隔。BETWEEN匹配范围中所有的值，包括指定的开始值和结束值。
通过过滤选择不包含指定值的所有行时，你可能希望返回含NULL值的行。但是这做不到。因为NULL比较特殊，所以在进行匹配过滤或非匹配过滤时，不会返回这些结果。
要通过不止一个列进行过滤，可以使用AND操作符给WHERE子句附加条件。
事实上，许多DBMS在ORWHERE子句的第一个条件得到满足的情况下，就不再计算第二个条件了（在第一个条件满足时，不管第二个条件是否满足，相应的行都将被检索出来）。
WHERE子句中使用的关键字，用来表示检索匹配任一给定条件的行。
SQL（像多数语言一样）在处理OR操作符前，优先处理AND操作符
任何时候使用具有AND和OR操作符的WHERE子句，都应该使用圆括号明确地分组操作符。不要过分依赖默认求值顺序，即使它确实如你希望的那样。使用圆括号没有什么坏处，它能消除歧义。
