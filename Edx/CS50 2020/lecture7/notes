Notes here!!!

SQLite features (relational database):
1. use binary files that are more compact, efficient (others might be ASCII or)
2. tables (others might be sheets)

Approches:
1. (easier) .mode csv
            .import FILE TABLE
            .save 
sqlite3 [database]
.tables
.schema [tablename]
CREATE TABLE users (id INTEGER, username TEXT NOT NULL, hash TEXT NOT NULL, cash NUMERIC NOT NULL DEFAULT 10000.00, PRIMARY KEY(id));
CREATE UNIQUE INDEX username ON users (username);

Basics:            
SELECT title FROM shows WHERE title = "The Office";
SELECT title FROM shows WHERE title LIKE "%Office%";
SELECT DINSTINCT(UPPER(title)) FROM shows ORDER BY UPPER(title);
SELECT UPPER(title), COUNT(TRIM(title)) FROM shows GROUP BY UPPER(TRIM(title)) ORDER BY COUNT(title) DESC LIMIT 10;

No csv type data, because 因为如果有符号，很难选%Music%，如果还有"Musical"，"Music",
INSERT INTO shows (Timestamp, title, genres) VALUES("now", "The Muppet Show", "Comedy, Musical");
UPDATE shows SET genres = "Comedy, Drama, Musical" WHERE title = "The Muppet Show";

Data type:
BLOB INTEGER NUMERIC REAL TEXT
Key word:
NOT NULL, UNIQUE

为了解决多个值用符号分割的问题，用foreign key和另一个table用行存储

More data types in other server (Oracle):
BLOB 
INTEGER--smallint integer bigint 
NUMERIC--boolean date datetime numeric ...
REAL--real double precision
TEXT--char(n) varchar(n) text 设想一下很多网站设置最大输入文本，也是用处之一
