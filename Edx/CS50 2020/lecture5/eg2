/*
eg2 a good example to demonstrate how to create, print, free a linked list.
/*

# include <stdio.h>
# include <stdlib.h>

typedef struct node
{
    int number;
    struct node *next;
}
node;

int main(void)
{
    node *list = NULL;

    node *n = malloc(sizeof(node));
    
    if (n == NULL)  // something wrong, maybe no palce in memory
    {
        free(list);
        return 1;
    }
    // assign value
    n->number = 1;
    n->next = NULL;
    // give over to list
    list = n;   
    // cannot free n here since list and n point to the same node
    // so just let n points to another new allocated node
    n = malloc(sizeof(node));
    
    if (n == NULL)
    {
        free(list);
        return 1;
    }
    
    n->number = 2;
    n->next = NULL;
    list->next = n;
    
    n = malloc(sizeof(node));
    
    if (n == NULL)
    {
        free(list->next); // free one by one from end to begining
        free(list);
        return 1;
    }
    
    n->number = 3;
    n->next = NULL;
    list->next->next = n;
    //print linked list using for loop from list to end
    for (node *tmp = list; tmp!=NULL; tmp = tmp->next)
    {
        printf("%i\n", tmp->number);
    }
    //free linked list using while loop from list to end
    while (list != NULL)
    {
        node *tmp = list->next;
        free(list);
        list = tmp;
    }
}
